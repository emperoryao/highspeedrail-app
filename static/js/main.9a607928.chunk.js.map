{"version":3,"sources":["Loading.js","station.js","context.js","search.js","results.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","className","OriginStationID","id","station","AppContext","React","createContext","AppProvider","children","useState","loading","setLoading","trainData","setTrainData","startStation","setStartStation","endStation","setEndStation","url","console","log","getData","a","fetch","res","json","map","item","useEffect","Provider","value","handleClick","document","getElementById","useGlobalContext","useContext","Search","onChange","start","end","disabled","onClick","Results","index","TicketType","Price","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"uOAUeA,EARC,WACd,OACE,qBAAKC,UAAU,UAAf,SACE,+CCKSC,EAVS,CACtB,CAAEC,GAAI,OAAQC,QAAS,gBACvB,CAAED,GAAI,OAAQC,QAAS,gBACvB,CAAED,GAAI,OAAQC,QAAS,gBACvB,CAAED,GAAI,OAAQC,QAAS,gBACvB,CAAED,GAAI,OAAQC,QAAS,gBACvB,CAAED,GAAI,OAAQC,QAAS,gBACvB,CAAED,GAAI,OAAQC,QAAS,gBACvB,CAAED,GAAI,OAAQC,QAAS,iB,8BCNnBC,EAAaC,IAAMC,gBACnBC,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,mBAAS,MAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAoCN,mBAAS,IAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACMC,EAAG,gEAA4DJ,EAA5D,eAA+EE,EAA/E,wBAOPG,QAAQC,IAAI,qBAAiBN,GAC7BK,QAAQC,IAAI,mBAAeJ,GAE3B,IAAMK,EAAO,uCAAG,8BAAAC,EAAA,yDACI,KAAjBR,GAAsC,KAAfE,EADV,wDAIhBL,GAAW,GAJK,kBAMIY,MAAML,GANV,cAMRM,EANQ,gBAOUA,EAAIC,OAPd,OAORb,EAPQ,OAQdC,EAAaD,GACbD,GAAW,GACXQ,QAAQC,IAAI,kBAAaR,GACzBA,EAAU,GAAV,MAAsBc,KAAI,SAACC,GAAD,OAAUR,QAAQC,IAAI,8BAAWO,MAX7C,kDAadR,QAAQC,IAAI,+BAbE,0DAAH,qDAoBf,OAJAQ,qBAAU,WACRP,MACC,CAACL,IAGF,cAACZ,EAAWyB,SAAZ,CACEC,MAAO,CACLpB,UACAC,aACAC,YACAC,eACAC,eACAC,kBACAC,aACAC,gBACAc,YAvCa,WACjBd,EAAce,SAASC,eAAe,OAAOH,QAuCzCZ,MACAG,WAZJ,SAeGb,KAOM0B,EAAmB,WAC9B,OAAOC,qBAAW/B,ICDLgC,MAtDf,WACE,MAMIF,IALFH,EADF,EACEA,YACAjB,EAFF,EAEEA,aAEAC,GAJF,EAGEC,WAHF,EAIED,iBAGF,OAPA,EAKEE,cAGA,qCACE,4DAEE,wBACEf,GAAG,QACHmC,SAAU,kBACRtB,EAAgBiB,SAASC,eAAe,SAASH,QAHrD,SAMG7B,EAAgByB,KAAI,SAACY,GACpB,IAAQnC,EAAgBmC,EAAhBnC,QAASD,EAAOoC,EAAPpC,GACjB,OACE,wBAAiB4B,MAAO5B,EAAxB,SACGC,GADUD,WAOrB,4DAEE,wBAAQA,GAAG,MAAX,SACGD,EAAgByB,KAAI,SAACa,GACpB,IAAQpC,EAAgBoC,EAAhBpC,QAASD,EAAOqC,EAAPrC,GACjB,OAAIA,IAAOY,EAEP,wBAAiBgB,MAAO5B,EAAIsC,UAAQ,EAApC,SACGrC,GADUD,GAMf,wBAAiB4B,MAAO5B,EAAxB,SACGC,GADUD,WAOrB,wBAAQuC,QAASV,EAAjB,0BACA,gCCvBSW,MA7Bf,WACI,IAAQ9B,EAAcsB,IAAdtB,UACR,OACE,mCACGA,GACC,gCAEE,+BACGA,EAAU,GAAV,wBADH,MAEGA,EAAU,GAAV,gCAGFA,EAAU,GAAV,MAAsBc,KAAI,SAACC,EAAMgB,GAChC,IAAQC,EAAsBjB,EAAtBiB,WAAYC,EAAUlB,EAAVkB,MAEpB,OADA1B,QAAQC,IAAIwB,EAAYC,GAEtB,8BACE,+BACGD,EADH,KACiBC,MAFTF,YCKXG,MAjBf,WAGE,OAFoBZ,IAAZxB,QAGC,cAAC,EAAD,IAGP,qBAAKV,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,iFACA,cAAC,EAAD,IACA,cAAC,EAAD,UCPO+C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJ1B,SAASC,eAAe,SAM1Bc,M","file":"static/js/main.9a607928.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className='loading'>\r\n      <h1>loading...</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loading\r\n","const OriginStationID = [\r\n  { id: '1000', station: '台北' },\r\n  { id: '1010', station: '板橋' },\r\n  { id: '1020', station: '桃園' },\r\n  { id: '1030', station: '新竹' },\r\n  { id: '1040', station: '台中' },\r\n  { id: '1050', station: '嘉義' },\r\n  { id: '1060', station: '台南' },\r\n  { id: '1070', station: '左營' },\r\n]\r\nexport default OriginStationID\r\n","import React, { useState, useEffect, useContext } from 'react'\r\n\r\nconst AppContext = React.createContext()\r\nconst AppProvider = ({ children }) => {\r\n  const [loading, setLoading] = useState(false) //用來抓取api時的畫面延遲設定\r\n  const [trainData, setTrainData] = useState(null) //存放抓取到的api\r\n  const [startStation, setStartStation] = useState('') //存放起站資訊\r\n  const [endStation, setEndStation] = useState('') //存放迄站資訊，\r\n  const url = `https://ptx.transportdata.tw/MOTC/v2/Rail/THSR/ODFare/${startStation}/to/${endStation}?$top=1&$format=JSON`\r\n  \r\n  const handleClick= () => {\r\n    setEndStation(document.getElementById('end').value)  /* 設endStation!! */\r\n  }\r\n  \r\n\r\n    console.log('StartStation為', startStation)\r\n    console.log('EndStation為', endStation)\r\n \r\n    const getData = async () => {\r\n    if(startStation === '' || endStation === ''){       /* 避免還未選站就抓資料!! */\r\n      return\r\n    }\r\n    setLoading(true)\r\n    try {\r\n      const res = await fetch(url)\r\n      const trainData = await res.json()\r\n      setTrainData(trainData)\r\n      setLoading(false)\r\n      console.log(\"trainData為\",trainData)\r\n      trainData[0]['Fares'].map((item) => console.log('這是APP內的', item))\r\n    } catch (error) {\r\n      console.log('抓取api異常')\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getData()\r\n  }, [endStation])\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        loading,\r\n        setLoading,\r\n        trainData,\r\n        setTrainData,\r\n        startStation,\r\n        setStartStation,\r\n        endStation,\r\n        setEndStation,\r\n        handleClick,\r\n        url,\r\n        getData,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  )\r\n}\r\n\r\n//custom hook\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext)\r\n}\r\nexport { AppContext, AppProvider }\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Loading from './Loading'\r\nimport OriginStationID from './station'\r\nimport { AppContext, useGlobalContext } from './context'\r\n\r\nfunction Search() {\r\n  const {\r\n    handleClick,\r\n    startStation,\r\n    endStation,\r\n    setStartStation,\r\n    setEndStation,\r\n  } = useGlobalContext()\r\n  return (\r\n    <>\r\n      <div>\r\n        乘車起點:\r\n        <select\r\n          id='start'\r\n          onChange={() =>\r\n            setStartStation(document.getElementById('start').value)  /* 設startStation!! */\r\n          }\r\n        >\r\n          {OriginStationID.map((start) => {\r\n            const { station, id } = start\r\n            return (\r\n              <option key={id} value={id}>\r\n                {station}\r\n              </option>\r\n            )\r\n          })}\r\n        </select>\r\n      </div>\r\n      <div>\r\n        乘車終點:\r\n        <select id='end'>\r\n          {OriginStationID.map((end) => {\r\n            const { station, id } = end\r\n            if (id === startStation) {\r\n              return (\r\n                <option key={id} value={id} disabled>\r\n                  {station}\r\n                </option>\r\n              )\r\n            }\r\n            return (\r\n              <option key={id} value={id}>\r\n                {station}\r\n              </option>\r\n            )\r\n          })}\r\n        </select>\r\n      </div>\r\n      <button onClick={handleClick}>查詢</button>\r\n      <article></article>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport { useGlobalContext } from './context'\r\n\r\n\r\nfunction Results() {\r\n    const { trainData } = useGlobalContext()\r\n    return (\r\n      <>\r\n        {trainData && (   /* 有抓到資料才跑 */\r\n          <div>\r\n            {/* 起始站 */}\r\n            <h3>\r\n              {trainData[0]['OriginStationName']['Zh_tw']}---\r\n              {trainData[0]['DestinationStationName']['Zh_tw']}\r\n            </h3>\r\n            {/* 票價 */}\r\n            {trainData[0]['Fares'].map((item, index) => {\r\n              const { TicketType, Price } = item\r\n              console.log(TicketType, Price)\r\n              return (\r\n                <div key={index}>\r\n                  <h3>\r\n                    {TicketType}:${Price}\r\n                  </h3>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        )}\r\n      </>\r\n    )\r\n}\r\n\r\nexport default Results\r\n","import React, { useEffect, useState, useContext } from 'react'\nimport ReactDom from 'react-dom'\nimport './App.css'\nimport Search from './search'\nimport Loading from './Loading'\nimport Results from './results';\nimport { useGlobalContext } from './context'\n\nfunction App() {\n  const { loading } = useGlobalContext()\n\n  if (loading) {\n    return <Loading />\n  }\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <p>高鐵票價查詢系統</p>\n        <Search />\n        <Results />\n      </header>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { AppProvider } from './context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}