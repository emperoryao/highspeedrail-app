{"version":3,"sources":["station.js","context.js","search.js","Loading.js","results.js","App.js","reportWebVitals.js","index.js"],"names":["OriginStationID","id","station","AppContext","React","createContext","AppProvider","children","useState","loading","setLoading","trainData","setTrainData","startStation","setStartStation","endStation","setEndStation","isSending","setIsSending","url","console","log","getData","a","fetch","res","json","useEffect","Provider","value","useGlobalContext","useContext","Search","defaultValue","onChange","e","target","disabled","map","start","end","type","onClick","Loading","className","Results","item","index","TicketType","Price","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5994ae3c.chunk.js","sourcesContent":["const OriginStationID = [\r\n  { id: '1000', station: '台北' },\r\n  { id: '1010', station: '板橋' },\r\n  { id: '1020', station: '桃園' },\r\n  { id: '1030', station: '新竹' },\r\n  { id: '1040', station: '台中' },\r\n  { id: '1050', station: '嘉義' },\r\n  { id: '1060', station: '台南' },\r\n  { id: '1070', station: '左營' },\r\n]\r\nexport default OriginStationID\r\n","import React, { useState, useEffect, useContext } from 'react'\r\n\r\n\r\nconst AppContext = React.createContext()\r\nconst AppProvider = ({ children }) => {\r\n  const [loading, setLoading] = useState(false) //用來抓取api時的畫面延遲設定\r\n  const [trainData, setTrainData] = useState(null) //存放抓取到的api\r\n  const [startStation, setStartStation] = useState('') //存放起站資訊\r\n  const [endStation, setEndStation] = useState('') //存放迄站資訊，\r\n  const [isSending,setIsSending] = useState(false)  /* 查詢按鈕 */\r\n  const url = `https://ptx.transportdata.tw/MOTC/v2/Rail/THSR/ODFare/${startStation}/to/${endStation}?$top=1&$format=JSON`\r\n  \r\n    console.log('StartStation為', startStation)\r\n    console.log('EndStation為', endStation)\r\n    console.log('trainData為', trainData)\r\n \r\n  const getData = async () => {\r\n    if(startStation === '' || endStation === '' || isSending === false){       /* 避免還未選站就抓資料!! */\r\n      return\r\n    }\r\n    setLoading(true)\r\n    console.log('loading start');\r\n    try {\r\n      const res = await fetch(url)\r\n      const trainData = await res.json()\r\n      setTrainData(trainData)\r\n      // trainData[0]['Fares'].map((item) => console.log('這是APP內的', item))\r\n      setLoading(false)\r\n      console.log('loading finish')\r\n    } catch (error) {\r\n      console.log('抓取api異常')\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getData()\r\n    // 清空變數\r\n    setIsSending(false)\r\n    setStartStation('')\r\n    setEndStation('')\r\n  }, [isSending])\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        loading,\r\n        setLoading,\r\n        trainData,\r\n        setTrainData,\r\n        startStation,\r\n        setStartStation,\r\n        endStation,\r\n        setEndStation,\r\n        url,\r\n        getData,\r\n        setIsSending,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  )\r\n}\r\n\r\n//custom hook\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext)\r\n}\r\nexport { AppContext, AppProvider }\r\n","import React from 'react'\r\nimport OriginStationID from './station'\r\nimport { useGlobalContext } from './context'\r\n\r\nfunction Search() {\r\n  const { startStation, setStartStation, setEndStation, setIsSending } =\r\n    useGlobalContext()\r\n\r\n    const handleRequest = ()=>{\r\n      setIsSending(true)\r\n    }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        乘車起點:\r\n        <select\r\n          defaultValue={'DEFAULT'}\r\n          onChange={(e) =>\r\n            setStartStation(e.target.value)\r\n          } /*設startStation!!  */\r\n        >\r\n          <option value='DEFAULT' disabled>\r\n            請選擇\r\n          </option>\r\n          {OriginStationID.map((start) => {\r\n            const { station, id } = start\r\n            return (\r\n              <option key={id} value={id}>\r\n                {station}\r\n              </option>\r\n            )\r\n          })}\r\n        </select>\r\n      </div>\r\n      <div>\r\n        乘車終點:\r\n        <select defaultValue={'DEFAULT'} onChange={(e) => setEndStation(e.target.value)}>\r\n          <option value='DEFAULT' disabled>\r\n            請選擇\r\n          </option>\r\n          {OriginStationID.map((end) => {\r\n            const { station, id } = end\r\n            return (\r\n              <option\r\n                key={id}\r\n                value={id}\r\n                disabled={id === startStation ? true : false}\r\n              >\r\n                {station}\r\n              </option>\r\n            )\r\n          })}\r\n        </select>\r\n      </div>\r\n      <button type='button' onClick={handleRequest}>查詢</button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className='loading'>\r\n      <h1>loading...</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loading\r\n","import React from 'react'\r\nimport { useGlobalContext } from './context'\r\n\r\n\r\nfunction Results() {\r\n    const { trainData } = useGlobalContext()\r\n    return (\r\n      <>\r\n        {trainData && (   /* 有抓到資料才跑 */\r\n          <div>\r\n            {/* 起始站 */}\r\n            <h3>\r\n              {trainData[0]['OriginStationName']['Zh_tw']}---\r\n              {trainData[0]['DestinationStationName']['Zh_tw']}\r\n            </h3>\r\n            {/* 票價 */}\r\n            {trainData[0]['Fares'].map((item, index) => {\r\n              const { TicketType, Price } = item\r\n              // console.log(TicketType, Price)\r\n              return (\r\n                <div key={index}>\r\n                  <h3>\r\n                    {TicketType}:${Price}\r\n                  </h3>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        )}\r\n      </>\r\n    )\r\n}\r\n\r\nexport default Results\r\n","import React, { useEffect, useState, useContext } from 'react'\nimport ReactDom from 'react-dom'\nimport './App.css'\nimport Search from './search'\nimport Loading from './Loading'\nimport Results from './results';\nimport { useGlobalContext } from './context'\n\nfunction App() {\n  const { loading } = useGlobalContext()\n\n  if (loading) {\n    return <Loading />\n  }\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <p>高鐵票價查詢系統</p>\n        <Search />\n        <Results />\n      </header>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { AppProvider } from './context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}